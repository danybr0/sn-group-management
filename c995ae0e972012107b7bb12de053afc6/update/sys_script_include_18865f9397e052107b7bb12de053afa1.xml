<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_393895_sn_group.u_getMembers</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>u_getMembers</name>
        <script><![CDATA[function u_getMembers() {
    var userIds = [];
	var assignmentGroup = current.variables.assignment_group;
    var gr = new GlideRecord('sys_user_grmember');
    gr.addQuery('group', assignmentGroup);
    gr.query();
    while (gr.next()) {
        userIds.push(gr.getvalue('user'));
	}
	userIds = userIds.join(',');
	return "sys_idIN" + userIds;
}

function u_getMembers() {
//    var userIds = ' ';
//    var assignmentGroup = current.variables.assignment_group;
   
//    //return everything if the assigned_to value is empty
//    if(!assignmentGroup)
//       return;
   
//    //sys_user_grmember has the user to group relationship
//    var gr = new GlideRecord('sys_user_grmember');
//    gr.addQuery('group', assignmentGroup);
//    gr.query();
//    while(gr.next()) {
//       if (userIds.length > 0) {
//          //build a comma separated string of groups if there is more than one
//          userIds += (',' + gr.user);
//       }
//       else {
//          userIds = gr.user;
//       }
//    }
//    // return Groups where assigned to is in those groups we use IN for lists
//    return 'sys_idIN' + userIds;
}

// function u_getMembers() {
//     var users = {};
// 	var assignmentGroup = current.variables.assignment_group;

//     var gr = new GlideRecord('sys_user_grmember');
//     gr.addQuery('assignment_group', assignmentGroup);
//     gr.query();
//     while (gr.next()) {
// 		users[gr.user.toString()] = true;
// 	}
// 	var ids = [];
// 	for (var id in users)
// 		ids.push(id);
// 	return ids.join(',');
// }

// function u_getMembers() {
//    var userIds = [];
//    var assignmentGroup = current.variables.assignment_group;
   
// 	//return everything if the assigned_to value is empty
//    if(!assignmentGroup){
//       return;
//    }
//    //Query the Group Member table
//    var grp = new GlideRecord('sys_user_grmember');
//    grp.addQuery('assignment_group',assignmentGroup);
//    grp.query();
//    while(grp.next()) {
//       if (userIds.length > 0) {
//          //build a comma separated string of groups if there is more than one
//          userIds += (',' + grp.assignment_group.toString());
//       }
//       else {
//          userIds = grp.assignment_group.toString();
//       }
//    }
// // return Groups where assigned to is in those groups we use IN for lists
//    return 'sys_idIN' + userIds;
// }]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-15 17:55:06</sys_created_on>
        <sys_id>18865f9397e052107b7bb12de053afa1</sys_id>
        <sys_mod_count>19</sys_mod_count>
        <sys_name>u_getMembers</sys_name>
        <sys_package display_value="SN Group Management" source="x_393895_sn_group">c995ae0e972012107b7bb12de053afc6</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="SN Group Management">c995ae0e972012107b7bb12de053afc6</sys_scope>
        <sys_update_name>sys_script_include_18865f9397e052107b7bb12de053afa1</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-26 20:26:09</sys_updated_on>
    </sys_script_include>
</record_update>
